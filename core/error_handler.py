"""–ë–∞–∑–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫"""

import traceback
from typing import Optional, Any, Dict
from datetime import datetime

from utils import get_logger
from interfaces.error_handler_interface import ErrorHandlerInterface
from .notification_manager import NotificationManager

logger = get_logger("error_handler")

class BaseErrorHandler(ErrorHandlerInterface):
    """–ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫"""
    
    def __init__(self, notification_manager: NotificationManager):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
        
        Args:
            notification_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–ø–æ–≤—ñ—â–µ–Ω—å
        """
        self.notification_manager = notification_manager
        
    async def handle_error(
        self,
        message: str,
        error: Exception,
        critical: bool = False,
        context: Optional[Dict[str, Any]] = None
    ) -> None:
        """
        –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º —Ç–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º
        
        Args:
            message: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            error: –û–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏
            critical: –ß–∏ —î –ø–æ–º–∏–ª–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–æ—é
            context: –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏
        """
        # –§–æ—Ä–º—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
        error_details = {
            "message": message,
            "error_type": type(error).__name__,
            "error_message": str(error),
            "traceback": traceback.format_exc(),
            "timestamp": datetime.now().isoformat(),
            "critical": critical,
            "context": context or {}
        }
        
        # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É
        if critical:
            logger.critical(f"{message}: {error}", error_details)
        else:
            logger.error(f"{message}: {error}", error_details)
            
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        notification_message = self.format_error_message(error_details)
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        await self.notification_manager.send_notification(
            notification_message,
            critical=critical
        )
        
    def format_error_message(self, error_details: Dict[str, Any]) -> str:
        """
        –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
        
        Args:
            error_details: –î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
            
        Returns:
            –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        """
        critical_prefix = "üî¥ –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê" if error_details["critical"] else "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞"
        
        message = f"{critical_prefix}:\n\n"
        message += f"üìù –û–ø–∏—Å: {error_details['message']}\n"
        message += f"üîç –¢–∏–ø: {error_details['error_type']}\n"
        message += f"‚ùå –ü–æ–º–∏–ª–∫–∞: {error_details['error_message']}\n"
        
        # –î–æ–¥–∞—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç —è–∫—â–æ –≤—ñ–Ω —î
        if error_details["context"]:
            message += "\nüìã –ö–æ–Ω—Ç–µ–∫—Å—Ç:\n"
            for key, value in error_details["context"].items():
                message += f"- {key}: {value}\n"
        
        # –î–æ–¥–∞—î–º–æ —á–∞—Å—Ç–∏–Ω—É —Å—Ç–µ–∫—É –≤–∏–∫–ª–∏–∫—ñ–≤
        tb_lines = error_details["traceback"].split("\n")[-3:]
        message += "\nüîç –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ —Å—Ç–µ–∫—É:\n"
        message += "\n".join(tb_lines)
        
        return message
    
    async def handle_warning(
        self,
        message: str,
        context: Optional[Dict[str, Any]] = None
    ) -> None:
        """
        –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
        
        Args:
            message: –¢–µ–∫—Å—Ç –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
            context: –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        """
        # –õ–æ–≥—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
        logger.warning(message, context)
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        warning_message = f"‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è:\n\n"
        warning_message += f"üìù {message}\n"
        
        if context:
            warning_message += "\nüìã –ö–æ–Ω—Ç–µ–∫—Å—Ç:\n"
            for key, value in context.items():
                warning_message += f"- {key}: {value}\n"
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        await self.notification_manager.send_notification(warning_message)
